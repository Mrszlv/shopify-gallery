{% comment %}
  Cart section (responsive, accessible)
{% endcomment %}

<section class="cart">
  <h1 class="cart__title">{{ 'cart.title' | t }}</h1>

  {% if cart.item_count == 0 %}
    <p class="cart__empty">Your cart is empty.</p>
  {% else %}
    <form action="{{ routes.cart_url }}" method="post" class="cart__form">
      <table class="cart__table">
        <thead>
          <tr>
            <th scope="col" class="cart__col cart__col--product">Product</th>
            <th scope="col" class="cart__col cart__col--price">Price</th>
            <th scope="col" class="cart__col cart__col--qty">Qty</th>
            <th scope="col" class="cart__col cart__col--total">Total</th>
            <th scope="col" class="cart__col cart__col--actions"><span class="visually-hidden">Actions</span></th>
          </tr>
        </thead>
        <tbody>
          {% for item in cart.items %}
            <tr class="cart-item">
              <td class="cart-item__product">
                {% render 'image', image: item.image, url: item.url %}
                <div class="cart-item__meta">
                  <a href="{{ item.url }}" class="cart-item__title">{{ item.product.title }}</a>
                  {% unless item.product.has_only_default_variant %}
                    <div class="cart-item__variant">
                      {{ item.variant.title }}
                    </div>
                  {% endunless %}
                  {% if item.selling_plan_allocation %}
                    <div class="cart-item__plan">
                      {{ item.selling_plan_allocation.selling_plan.name }}
                    </div>
                  {% endif %}
                  <a class="cart-item__remove" href="{{ item.url_to_remove }}">
                    {{ 'cart.remove' | t }}
                  </a>
                </div>
              </td>

              <td class="cart-item__price">
                {{ item.final_price | money }}
                {% if item.original_price > item.final_price %}
                  <s class="cart-item__compare">{{ item.original_price | money }}</s>
                {% endif %}
              </td>

              <td class="cart-item__qty">
                <label class="visually-hidden" for="qty-{{ item.key }}">Quantity</label>
                <input
                  id="qty-{{ item.key }}"
                  class="qty-input"
                  type="number"
                  inputmode="numeric"
                  name="updates[{{ item.key }}]"
                  value="{{ item.quantity }}"
                  min="0"
                  step="1"
                >
              </td>

              <td class="cart-item__line-total">
                {{ item.final_line_price | money }}
              </td>

              <td class="cart-item__actions">
                <button class="btn btn--small" name="update" type="submit" value="update">
                  {{ 'cart.update' | t }}
                </button>
              </td>
            </tr>
          {% endfor %}
        </tbody>
        <tfoot>
          <tr>
            <td colspan="3" class="cart__summary-label">Subtotal</td>
            <td class="cart__summary-value">{{ cart.total_price | money }}</td>
            <td></td>
          </tr>
        </tfoot>
      </table>

      <div class="cart__cta">
        <button class="btn" name="update" type="submit" value="update">
          {{ 'cart.update' | t }}
        </button>
        <button class="btn btn--primary" type="submit" name="checkout" value="checkout">
          {{ 'cart.checkout' | t }}
        </button>
      </div>
    </form>
  {% endif %}
</section>

{% stylesheet %}
.cart {
  --gap: 1rem;
  --radius: 8px;
  --border: 1px solid rgba(0,0,0,.08);
  --muted: rgba(0,0,0,.56);
  --bg: #fff;
}
.cart__title { margin: 0 0 1rem; font-size: 1.75rem; font-weight: 700; }
.cart__empty { color: var(--muted); }

.cart__form { display: grid; gap: var(--gap); }

.cart__table {
  width: 100%;
  border-collapse: collapse;
  background: var(--bg);
  border: var(--border);
  border-radius: var(--radius);
  overflow: hidden;
}
.cart__table th,
.cart__table td {
  padding: .875rem;
  text-align: left;
  vertical-align: middle;
  border-bottom: var(--border);
}
.cart__table thead th { font-size: .875rem; color: var(--muted); font-weight: 600; }

.cart-item__product { display: grid; grid-template-columns: 88px 1fr; gap: .75rem; }
.cart-item__meta { display: grid; gap: .25rem; }
.cart-item__title { font-weight: 600; text-decoration: none; color: inherit; }
.cart-item__variant, .cart-item__plan { font-size: .875rem; color: var(--muted); }
.cart-item__remove { font-size: .875rem; color: var(--muted); text-decoration: underline; }

.cart-item__price .cart-item__compare { margin-left: .375rem; color: var(--muted); }

.qty-input {
  width: 88px;
  padding: .5rem .625rem;
  border: var(--border);
  border-radius: 6px;
  font: inherit;
}

.cart__summary-label { text-align: right; font-weight: 600; }
.cart__summary-value { font-weight: 700; }

.cart__cta { display: flex; gap: .75rem; justify-content: flex-end; }

.btn {
  appearance: none;
  border: var(--border);
  background: #fff;
  padding: .75rem 1rem;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 600;
}
.btn--small { padding: .5rem .75rem; font-size: .875rem; }
.btn--primary { background: #111; color: #fff; border-color: #111; }

.visually-hidden {
  position: absolute !important;
  width: 1px; height: 1px; padding: 0; margin: -1px;
  overflow: hidden; clip: rect(0 0 0 0); white-space: nowrap; border: 0;
}

/* Mobile stack */
@media (max-width: 720px) {
  .cart__table thead { display: none; }
  .cart__table, .cart__table tbody, .cart__table tr, .cart__table td { display: block; width: 100%; }
  .cart__table tr { border-bottom: var(--border); padding: .75rem; }
  .cart-item__product { grid-template-columns: 72px 1fr; }
  .cart-item__price, .cart-item__qty, .cart-item__line-total, .cart-item__actions {
    margin-top: .5rem;
  }
  .cart__summary-label, .cart__summary-value { text-align: left; }
  .cart__cta { justify-content: stretch; }
  .btn, .btn--primary { width: 100%; }
}
{% endstylesheet %}

{% javascript %}
/* Auto-submit on quantity change (debounced) */
document.addEventListener('DOMContentLoaded', () => {
  const form = document.querySelector('.cart__form');
  if (!form) return;

  let t;
  form.querySelectorAll('.qty-input').forEach((input) => {
    input.addEventListener('input', () => {
      clearTimeout(t);
      t = setTimeout(() => {
        const btn = form.querySelector('button[name="update"]');
        if (btn) btn.click(); else form.submit();
      }, 400);
    });
  });
});
{% endjavascript %}

{% schema %}
{
  "name": "t:general.cart",
  "settings": []
}
{% endschema %}

